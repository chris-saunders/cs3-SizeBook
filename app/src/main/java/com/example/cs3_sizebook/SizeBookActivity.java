package com.example.cs3_sizebook;

import android.app.DatePickerDialog;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.support.v7.widget.ListViewCompat;
import android.util.Log;
import android.view.ContextMenu;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.TextView;

import com.google.android.gms.appindexing.Action;
import com.google.android.gms.appindexing.AppIndex;
import com.google.android.gms.appindexing.Thing;
import com.google.android.gms.common.api.GoogleApiClient;
import com.google.android.gms.common.images.Size;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.lang.reflect.Type;
import java.util.ArrayList;

public class SizeBookActivity extends AppCompatActivity {

    private static final String FILENAME = "CS3sizebook.sav";
    private ArrayList<Person> personList = new ArrayList<Person>();
    private ArrayAdapter<Person> adapter;
    private ListView personListView;
    private TextView counter;
    Button newButton;
    private int listItem;

    /**
     * ATTENTION: This was auto-generated to implement the App Indexing API.
     * See https://g.co/AppIndexing/AndroidStudio for more information.
     */
    private GoogleApiClient client;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_size_book);
        personListView = (ListView) findViewById(R.id.personList); //Lists the people
        registerForContextMenu(personListView);
        counter = (TextView) findViewById(R.id.count); //For counting the number of entries


        //Initiate buttons and date
        newButton = (Button) findViewById(R.id.new_button);


        /**
         * When the new button is clicked it starts the edit activity
         * @see EditActivity
         */
        newButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(SizeBookActivity.this, EditActivity.class);
                startActivityForResult(intent, 1);

            }
        });





        // ATTENTION: This was auto-generated to implement the App Indexing API.
        // See https://g.co/AppIndexing/AndroidStudio for more information.
        client = new GoogleApiClient.Builder(this).addApi(AppIndex.API).build();

    }

    /**
     * This gets the person object from EditActivty
     * Modified from:
     * http://stackoverflow.com/questions/14292398/how-to-pass-data-from-2nd-activity-to-1st-
     *  activity-when-pressed-back-android
     * accessed on 2/3/2017
     * @param requestCode
     * @param resultCode returns RESULT_OK from before if it was successful
     * @param data the intent that is passed by EditActivity, which holds a person
     */
    public void onActivityResult(int requestCode, int resultCode, Intent data){

        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == 1) {
            if(resultCode == RESULT_OK) {
                Person person = new Person();
                person = (Person)data.getSerializableExtra("person");
                Log.d("Test", person + " Side Main");
                personList.add(person);

                }
            }

        if (requestCode == 2){
            if (resultCode == RESULT_OK){
                Person person = new Person();
                person = (Person)data.getSerializableExtra("person");
                Log.d("Test", person.toString() + "Edit here");
                personList.set(listItem, person);
            }
        }

        counter.setText("Number of Entries : " + Integer.toString(personList.size()));
        adapter.notifyDataSetChanged();
        saveInFile();

    }

    //Honestly no idea, this was auto done
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    //Same here, autogenerated
    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    /**
     * ATTENTION: This was auto-generated to implement the App Indexing API.
     * See https://g.co/AppIndexing/AndroidStudio for more information.
     */
    public Action getIndexApiAction() {
        Thing object = new Thing.Builder()
                .setName("Main Page") // TODO: Define a title for the content shown.
                // TODO: Make sure this auto-generated URL is correct.
                .setUrl(Uri.parse("http://[ENTER-YOUR-URL-HERE]"))
                .build();
        return new Action.Builder(Action.TYPE_VIEW)
                .setObject(object)
                .setActionStatus(Action.STATUS_TYPE_COMPLETED)
                .build();
    }

    /**
     * When the program starts it will load a file, if it exists and then set up the count and list
     */
    @Override
    public void onStart() {
        super.onStart();
        loadFromFile();

        adapter = new ArrayAdapter<Person>(this, R.layout.list_item, personList);
        personListView.setAdapter(adapter);

        counter.setText("Number of Entries : " + Integer.toString(personList.size()));


        // ATTENTION: This was auto-generated to implement the App Indexing API.
        // See https://g.co/AppIndexing/AndroidStudio for more information.
        client.connect();
        AppIndex.AppIndexApi.start(client, getIndexApiAction());
    }

    //Auto-generated
    @Override
    public void onStop() {
        super.onStop();

        // ATTENTION: This was auto-generated to implement the App Indexing API.
        // See https://g.co/AppIndexing/AndroidStudio for more information.
        AppIndex.AppIndexApi.end(client, getIndexApiAction());
        client.disconnect();
    }

    /**
     * this method handles the saving of the person data in a JSON
     * Taken from the lab
     */
    private void saveInFile() {
        try {
            FileOutputStream fos = openFileOutput(FILENAME,
                    Context.MODE_PRIVATE);
//			fos.write(new String(date.toString() + " | " + text)
//					.getBytes());
            BufferedWriter out = new BufferedWriter(new OutputStreamWriter(fos));

            Gson gson = new Gson();
            gson.toJson(personList, out);
            out.flush();
            fos.close();

        } catch (FileNotFoundException e) {
            // TODO Handle the exception
            throw new RuntimeException();
        } catch (IOException e) {
            // TODO
            throw new RuntimeException();
        }
    }

    /**
     * Loads the person list from a JSON file.
     * Taken from the lab.
     */
    private void loadFromFile() {
        try {
            FileInputStream fis = openFileInput(FILENAME);
            BufferedReader in = new BufferedReader(new InputStreamReader(fis));
            Gson gson = new Gson();

            Type listType = new TypeToken<ArrayList<Person>>(){}.getType();
            personList = gson.fromJson(in, listType);
            //Taken from http://stackoverflow.com/questions/20773850/gson-typetoken-with-dynamic-arraylist-item-type
            // On 02/24/17

        } catch (FileNotFoundException e) {
            // TODO Auto-generated catch block
            personList = new ArrayList<Person>();
            //throw new RuntimeException();
        }
// catch (IOException e) { Gradle throws a warning here, not sure if its important
//            // TODO Auto-generated catch block
//            throw new RuntimeException();
//        }
    }

    /**
     * Taken from
     * http://stackoverflow.com/questions/17207366/creating-a-menu-after-a-long-click-event-on-a-list-view
     * on 2/5/2017
     * @param menu Takes in the menu list
     * @param v the main view
     * @param menuInfo
     */
    @Override
    public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) {
        super.onCreateContextMenu(menu, v, menuInfo);
        if (v.getId()==R.id.personList) {
            MenuInflater inflater = getMenuInflater();
            inflater.inflate(R.menu.menu_list, menu);
        }
    }

    /**
     * This method handles long presses on an item.
     * When a long press is recorded a menu pops up with the option to edit or delete a record
     * Taken from http://stackoverflow.com/questions/17207366/creating-a-menu-after-a-long-click-event-on-a-list-view
     * on 5/5/2017
     * @param item
     * @return
     */
    @Override
    public boolean onContextItemSelected(MenuItem item) {
        AdapterView.AdapterContextMenuInfo info =
                (AdapterView.AdapterContextMenuInfo) item.getMenuInfo();
        int itemPosition = info.position;
        boolean edit = true; //For some reason view as also bringing up the edit window
        //This bool fixes that
        switch(item.getItemId()) {
            case R.id.view:
                edit = false;//Makes it so the edit window will not pop up
                Intent intentView = new Intent(SizeBookActivity.this, ViewActivity.class);
                intentView.putExtra("person", personList.get(itemPosition));
                startActivity(intentView);


            case R.id.edit: //When edit is pressed
                if (edit) {
                    Intent intentEdit = new Intent(SizeBookActivity.this, EditActivity.class);
                    intentEdit.putExtra("person", personList.get(itemPosition));
                    startActivityForResult(intentEdit, 2);
                    listItem = itemPosition;
//                  personList.set(itemPosition,
//                          (Person) getIntent().getSerializableExtra("person"));
//                  adapter.notifyDataSetChanged();
//                  saveInFile();
//                  counter.setText("Number of Entries : " + Integer.toString(personList.size()));
                }
                return true;


            case R.id.delete: //When delete is pressed the item is removed, and everything is updated
                personList.remove(itemPosition);
                adapter.notifyDataSetChanged();
                saveInFile();
                counter.setText("Number of Entries : " + Integer.toString(personList.size()));
                return true;
            default:
                return super.onContextItemSelected(item);
        }
    }


}

